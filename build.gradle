group 'io.coding_trip'
version '0.1'

buildscript {
    ext {
        kotlin_version = '1.2.0'
        ktor_version = '0.9.0'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

sourceCompatibility = 1.8
mainClassName = 'io.ktor.server.netty.DevelopmentEngine'

repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url "https://dl.bintray.com/kotlin/exposed" }
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Ktor
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"

    // db
    compile 'org.jetbrains.exposed:exposed:0.9.1'

    // json
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.2')

    // Logger
    compile "ch.qos.logback:logback-classic:1.2.1"

    // Test
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/lib"
    from(configurations.compile)
}
stage.dependsOn(copyToLib)

jar {
    manifest {
        attributes 'Main-Class': 'io.ktor.server.netty.DevelopmentEngine',
                'Implementation-Title': 'CodingTrip',
                'Implementation-Version': '0.1'
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}